{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMCmOh7oDspyBkvRO2gzQuZ",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Brunn0B/Ajax.Aulas-fech/blob/main/Tarefa%20de%20BI\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 9,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HVOHzUFLP4tx",
        "outputId": "7d361cda-9997-4d0b-a012-07431d9a7e2f"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Dados da Filial 1\n",
            "     ID do Produto                   Nome do Produto  Quantidade Vendida  \\\n",
            "0              101                Laptop Dell XPS 13                  20   \n",
            "1              102     Smartphone Samsung Galaxy S20                  30   \n",
            "2              103          Monitor LG UltraWide 34\"                  15   \n",
            "3              104  Teclado Mecânico Corsair K95 RGB                  25   \n",
            "4              105        Mouse Logitech MX Master 3                  10   \n",
            "..             ...                               ...                 ...   \n",
            "295            396             Notebook Acer Swift 3                  20   \n",
            "296            397           SSD Team Group MP33 1TB                  35   \n",
            "297            398     Fone de Ouvido Edifier W860NB                  28   \n",
            "298            399       Monitor BenQ PD3220U 32\" 4K                  10   \n",
            "299            400           Smartphone Vivo X50 Pro                  18   \n",
            "\n",
            "     Preço Unitário   \n",
            "0             1500.0  \n",
            "1             1000.0  \n",
            "2              600.0  \n",
            "3              200.0  \n",
            "4               80.0  \n",
            "..               ...  \n",
            "295            750.0  \n",
            "296            120.0  \n",
            "297             90.0  \n",
            "298           1100.0  \n",
            "299            700.0  \n",
            "\n",
            "[300 rows x 4 columns]\n",
            "/nDados da Filial 2:\n",
            "   ID do Produto                    Nome do Produto  Quantidade Vendida  \\\n",
            "0              1  Smartphone Samsung Galaxy Note 20                  22   \n",
            "1              2                 Laptop Dell XPS 13                  21   \n",
            "2              3               Monitor LG UltraWide                  22   \n",
            "3              4           Teclado Mecânico Corsair                  23   \n",
            "4              5       Mouse Gamer Razer DeathAdder                  24   \n",
            "\n",
            "   Preço Unitário  \n",
            "0           950.0  \n",
            "1            55.5  \n",
            "2            61.0  \n",
            "3            66.5  \n",
            "4            72.0  \n"
          ]
        }
      ],
      "source": [
        "import pandas as pd\n",
        "\n",
        "vendas_filial1 = pd.read_csv('vendas_filial1.csv')\n",
        "\n",
        "vendas_filial2 = pd.read_excel('vendas_filial2.xlsx')\n",
        "\n",
        "print(\"Dados da Filial 1\")\n",
        "print(vendas_filial1)\n",
        "print(\"/nDados da Filial 2:\")\n",
        "print(vendas_filial2.head())"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "vendas_filial1['Valor Total'] = vendas_filial1['Quantidade Vendida'] * vendas_filial1['Preço Unitário']\n",
        "vendas_filial2['Valor Total'] = vendas_filial2['Quantidade Vendida'] * vendas_filial2['Preço Unitário']\n",
        "\n",
        "print(\"Dados Transformados da Filial 1:\")\n",
        "print(vendas_filial1.head())\n",
        "print(\"/nDados Transformados Da Filial 2:\")\n",
        "print(vendas_filial2.head())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 642
        },
        "id": "eCvQnYamVDRI",
        "outputId": "1b9c563c-35c0-4e1c-9f2b-ff8bd9128ad7"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "error",
          "ename": "KeyError",
          "evalue": "'Preço Unitário'",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   3790\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3791\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcasted_key\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3792\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32mindex.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;32mindex.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;31mKeyError\u001b[0m: 'Preço Unitário'",
            "\nThe above exception was the direct cause of the following exception:\n",
            "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-10-8260c6ce1b64>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mvendas_filial1\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Valor Total'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mvendas_filial1\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Quantidade Vendida'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0mvendas_filial1\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Preço Unitário'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mvendas_filial2\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Valor Total'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mvendas_filial2\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Quantidade Vendida'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0mvendas_filial2\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Preço Unitário'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Dados Transformados da Filial 1:\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvendas_filial1\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhead\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   3891\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnlevels\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3892\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_getitem_multilevel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3893\u001b[0;31m             \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3894\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mis_integer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3895\u001b[0m                 \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   3796\u001b[0m             ):\n\u001b[1;32m   3797\u001b[0m                 \u001b[0;32mraise\u001b[0m \u001b[0mInvalidIndexError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3798\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3799\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3800\u001b[0m             \u001b[0;31m# If we have a listlike key, _check_indexing_error will raise\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mKeyError\u001b[0m: 'Preço Unitário'"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Carregamento dos dados transformados para um arquivo CSV\n",
        "vendas_filial1.to_csv(\"vendas_filial1_transformadas.csv\", index=False)\n",
        "vendas_filial2.to_csv(\"vendas_filial2_transformadas.csv\", index=False)\n",
        "\n",
        "# Apresentar os dados carregados dos arquivos CSV\n",
        "dados_filial1 = pd.read_csv('vendas_filial1_transformadas.csv')\n",
        "dados_filial2 = pd.read_csv('vendas_filial2_transformadas.csv')\n",
        "\n",
        "print(\"Dados Transformados da Filial 1 (do arquivo CSV):\")\n",
        "print(dados_filial1.head())\n",
        "\n",
        "print(\"\\nDados Transformados da Filial 2 (do arquivo CSV):\")\n",
        "print(dados_filial2.head())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "su78ZhOl8xJm",
        "outputId": "3e25eb03-ac81-4c18-9796-4ce7bcdddd22"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Dados Transformados da Filial 1 (do arquivo CSV):\n",
            "   ID do Produto                   Nome do Produto  Quantidade Vendida  \\\n",
            "0            101                Laptop Dell XPS 13                  20   \n",
            "1            102     Smartphone Samsung Galaxy S20                  30   \n",
            "2            103          Monitor LG UltraWide 34\"                  15   \n",
            "3            104  Teclado Mecânico Corsair K95 RGB                  25   \n",
            "4            105        Mouse Logitech MX Master 3                  10   \n",
            "\n",
            "   Preço Unitário   \n",
            "0           1500.0  \n",
            "1           1000.0  \n",
            "2            600.0  \n",
            "3            200.0  \n",
            "4             80.0  \n",
            "\n",
            "Dados Transformados da Filial 2 (do arquivo CSV):\n",
            "   ID do Produto                    Nome do Produto  Quantidade Vendida  \\\n",
            "0              1  Smartphone Samsung Galaxy Note 20                  22   \n",
            "1              2                 Laptop Dell XPS 13                  21   \n",
            "2              3               Monitor LG UltraWide                  22   \n",
            "3              4           Teclado Mecânico Corsair                  23   \n",
            "4              5       Mouse Gamer Razer DeathAdder                  24   \n",
            "\n",
            "   Preço Unitário  \n",
            "0           950.0  \n",
            "1            55.5  \n",
            "2            61.0  \n",
            "3            66.5  \n",
            "4            72.0  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import sqlite3\n",
        "\n",
        "# Criar uma conexão com o banco de dados\n",
        "conn = sqlite3.connect('dados_transformados.db')\n",
        "\n",
        "# Carregar os dados transformados para tabelas SQL\n",
        "vendas_filial1.to_sql(\"vendas_filial1_transformadas\", conn, index=False, if_exists='replace')\n",
        "vendas_filial2.to_sql(\"vendas_filial2_transformadas\", conn, index=False, if_exists='replace')\n",
        "\n",
        "# Apresentar os dados carregados das tabelas SQL\n",
        "dados_filial1 = pd.read_sql('SELECT * FROM vendas_filial1_transformadas', conn)\n",
        "dados_filial2 = pd.read_sql('SELECT * FROM vendas_filial2_transformadas', conn)\n",
        "\n",
        "print(\"Dados Transformados da Filial 1 (do banco de dados SQL):\")\n",
        "print(dados_filial1.head())\n",
        "\n",
        "print(\"\\nDados Transformados da Filial 2 (do banco de dados SQL):\")\n",
        "print(dados_filial2.head())\n",
        "\n",
        "# Fechar a conexão com o banco de dados\n",
        "conn.close()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "A4ZJhecU_ELu",
        "outputId": "46c19aae-d534-415c-8079-5a0f02a536d5"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Dados Transformados da Filial 1 (do banco de dados SQL):\n",
            "   ID do Produto                   Nome do Produto  Quantidade Vendida  \\\n",
            "0            101                Laptop Dell XPS 13                  20   \n",
            "1            102     Smartphone Samsung Galaxy S20                  30   \n",
            "2            103          Monitor LG UltraWide 34\"                  15   \n",
            "3            104  Teclado Mecânico Corsair K95 RGB                  25   \n",
            "4            105        Mouse Logitech MX Master 3                  10   \n",
            "\n",
            "   Preço Unitário   \n",
            "0           1500.0  \n",
            "1           1000.0  \n",
            "2            600.0  \n",
            "3            200.0  \n",
            "4             80.0  \n",
            "\n",
            "Dados Transformados da Filial 2 (do banco de dados SQL):\n",
            "   ID do Produto                    Nome do Produto  Quantidade Vendida  \\\n",
            "0              1  Smartphone Samsung Galaxy Note 20                  22   \n",
            "1              2                 Laptop Dell XPS 13                  21   \n",
            "2              3               Monitor LG UltraWide                  22   \n",
            "3              4           Teclado Mecânico Corsair                  23   \n",
            "4              5       Mouse Gamer Razer DeathAdder                  24   \n",
            "\n",
            "   Preço Unitário  \n",
            "0           950.0  \n",
            "1            55.5  \n",
            "2            61.0  \n",
            "3            66.5  \n",
            "4            72.0  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import sqlite3\n",
        "\n",
        "# Criar uma conexão com o banco de dados\n",
        "conn = sqlite3.connect('dados_transformados.db')\n",
        "\n",
        "# Criar um cursor para executar consultas SQL\n",
        "cursor = conn.cursor()\n",
        "\n",
        "# Executar uma consulta SQL para obter os dados da tabela vendas_filial1_transformadas\n",
        "cursor.execute(\"SELECT * FROM vendas_filial1_transformadas\")\n",
        "\n",
        "# Obter os resultados da consulta\n",
        "dados_filial1 = cursor.fetchall()\n",
        "\n",
        "# Exibir os dados da filial 1\n",
        "print(\"Dados Transformados da Filial 1:\")\n",
        "for linha in dados_filial1:\n",
        "    print(linha)\n",
        "\n",
        "# Executar uma consulta SQL para obter os dados da tabela vendas_filial2_transformadas\n",
        "cursor.execute(\"SELECT * FROM vendas_filial2_transformadas\")\n",
        "\n",
        "# Obter os resultados da consulta\n",
        "dados_filial2 = cursor.fetchall()\n",
        "\n",
        "# Exibir os dados da filial 2\n",
        "print(\"\\nDados Transformados da Filial 2:\")\n",
        "for linha in dados_filial2:\n",
        "    print(linha)\n",
        "\n",
        "# Fechar o cursor e a conexão com o banco de dados\n",
        "cursor.close()\n",
        "conn.close()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Bq15jb4T_XSD",
        "outputId": "5ac0b0c0-0bc7-43da-e6b9-66eabf59996b"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Dados Transformados da Filial 1:\n",
            "(101, 'Laptop Dell XPS 13', 20, 1500.0)\n",
            "(102, 'Smartphone Samsung Galaxy S20', 30, 1000.0)\n",
            "(103, 'Monitor LG UltraWide 34\"', 15, 600.0)\n",
            "(104, 'Teclado Mecânico Corsair K95 RGB', 25, 200.0)\n",
            "(105, 'Mouse Logitech MX Master 3', 10, 80.0)\n",
            "(106, 'Headset HyperX Cloud II', 40, 120.0)\n",
            "(107, 'Smartwatch Apple Watch Series 6', 50, 400.0)\n",
            "(108, 'Tablet Samsung Galaxy Tab S7', 35, 700.0)\n",
            "(109, 'Impressora HP LaserJet Pro', 20, 350.0)\n",
            "(110, 'Placa de Vídeo NVIDIA RTX 3080', 15, 900.0)\n",
            "(111, 'HD Externo Seagate 2TB', 45, 100.0)\n",
            "(112, 'SSD Kingston 1TB', 25, 150.0)\n",
            "(113, 'Cadeira Gamer DXRacer', 10, 500.0)\n",
            "(114, 'Notebook Lenovo ThinkPad X1', 18, 1400.0)\n",
            "(115, 'Monitor Dell 27\" 4K', 22, 450.0)\n",
            "(116, 'Webcam Logitech C920', 35, 70.0)\n",
            "(117, 'Microfone Blue Yeti', 30, 130.0)\n",
            "(118, 'Roteador TP-Link Archer C7', 40, 80.0)\n",
            "(119, 'Fone de Ouvido Bose QuietComfort 35', 25, 250.0)\n",
            "(120, 'Caixa de Som JBL Flip 5', 50, 90.0)\n",
            "(121, 'Mousepad SteelSeries QcK+', 60, 20.0)\n",
            "(122, 'Hub USB Anker 10 portas', 35, 40.0)\n",
            "(123, 'Smart TV Samsung 55\" 4K', 12, 1100.0)\n",
            "(124, 'Notebook Asus ZenBook 14', 25, 900.0)\n",
            "(125, 'Câmera DSLR Canon EOS Rebel T7i', 10, 650.0)\n",
            "(126, 'Controle Xbox Series X', 50, 60.0)\n",
            "(127, 'PlayStation 5', 20, 500.0)\n",
            "(128, 'Tablet iPad Pro 12.9\"', 18, 1100.0)\n",
            "(129, 'Drone DJI Mavic Air 2', 8, 1200.0)\n",
            "(130, 'Smartphone Xiaomi Mi 11', 30, 800.0)\n",
            "(131, 'Console Nintendo Switch', 40, 350.0)\n",
            "(132, 'Leitor de eBooks Kindle Paperwhite', 55, 100.0)\n",
            "(133, 'Teclado Razer BlackWidow Elite', 25, 180.0)\n",
            "(134, 'Processador Intel Core i9-10900K', 15, 500.0)\n",
            "(135, 'Memória RAM Corsair 16GB DDR4', 30, 80.0)\n",
            "(136, 'Carregador Portátil Anker 10000mAh', 45, 30.0)\n",
            "(137, 'Fone de Ouvido Sony WH-1000XM4', 22, 300.0)\n",
            "(138, 'Monitor Acer Predator 27\" 144Hz', 15, 500.0)\n",
            "(139, 'PC Gamer Alienware Aurora R10', 12, 1800.0)\n",
            "(140, 'Smartphone OnePlus 9 Pro', 28, 900.0)\n",
            "(141, 'SSD Samsung 970 EVO Plus 1TB', 25, 150.0)\n",
            "(142, 'Mouse Razer DeathAdder Elite', 35, 60.0)\n",
            "(143, 'Teclado Logitech G Pro', 40, 120.0)\n",
            "(144, 'Monitor BenQ ZOWIE XL2546', 15, 400.0)\n",
            "(145, 'Câmera GoPro Hero 9 Black', 20, 350.0)\n",
            "(146, 'Microfone Razer Seiren X', 35, 100.0)\n",
            "(147, 'Cadeira Secretlab Omega', 12, 450.0)\n",
            "(148, 'Teclado Mecânico HyperX Alloy FPS Pro', 20, 90.0)\n",
            "(149, 'Monitor Samsung Odyssey G7 32\"', 14, 750.0)\n",
            "(150, 'Smartphone Google Pixel 5', 30, 600.0)\n",
            "(151, 'Tablet Microsoft Surface Pro 7', 12, 850.0)\n",
            "(152, 'Projetor Epson PowerLite', 10, 700.0)\n",
            "(153, 'Fone de Ouvido JBL TUNE 500', 60, 40.0)\n",
            "(154, 'Câmera de Segurança Xiaomi Mi Home', 50, 50.0)\n",
            "(155, 'Switch Gigabit TP-Link', 30, 100.0)\n",
            "(156, 'Roteador Google Nest WiFi', 25, 180.0)\n",
            "(157, 'Controle DualSense PS5', 35, 70.0)\n",
            "(158, 'Fone de Ouvido AirPods Pro', 40, 250.0)\n",
            "(159, 'Monitor AOC 24\" Full HD', 22, 150.0)\n",
            "(160, 'Laptop HP Spectre x360', 18, 1300.0)\n",
            "(161, 'Impressora Epson EcoTank L3150', 20, 200.0)\n",
            "(162, 'Tablet Samsung Galaxy Tab A 10.1\"', 30, 300.0)\n",
            "(163, 'PlayStation 4 Slim', 25, 250.0)\n",
            "(164, 'Notebook Dell Inspiron 15', 30, 700.0)\n",
            "(165, 'Mouse Razer Naga Trinity', 18, 100.0)\n",
            "(166, 'Teclado Logitech G213 Prodigy', 35, 50.0)\n",
            "(167, 'SSD WD Blue 500GB', 45, 70.0)\n",
            "(168, 'Notebook Acer Aspire 5', 22, 650.0)\n",
            "(169, 'Caixa de Som Sony SRS-XB23', 40, 110.0)\n",
            "(170, 'Microfone HyperX QuadCast', 25, 130.0)\n",
            "(171, 'Teclado Corsair K70 RGB MK.2', 15, 160.0)\n",
            "(172, 'Notebook Asus VivoBook 15', 28, 800.0)\n",
            "(173, 'Cadeira Gamer ThunderX3 BC3', 15, 300.0)\n",
            "(174, 'SSD Samsung T5 500GB', 35, 90.0)\n",
            "(175, 'Console Xbox Series S', 20, 350.0)\n",
            "(176, 'Monitor Dell Ultrasharp 34\"', 12, 800.0)\n",
            "(177, 'Hub USB-C Satechi', 40, 60.0)\n",
            "(178, 'Mouse Logitech G305', 50, 50.0)\n",
            "(179, 'Impressora Brother HL-L2370DW', 18, 180.0)\n",
            "(180, 'Teclado Mecânico Redragon Kumara K552', 30, 80.0)\n",
            "(181, 'Webcam Razer Kiyo', 22, 120.0)\n",
            "(182, 'Teclado Cooler Master MK850', 15, 140.0)\n",
            "(183, 'Monitor LG 27GL850-B 144Hz', 20, 500.0)\n",
            "(184, 'Mousepad Corsair MM300', 60, 25.0)\n",
            "(185, 'Smartphone Huawei P40 Pro', 25, 700.0)\n",
            "(186, 'Laptop Microsoft Surface Laptop 3', 18, 1300.0)\n",
            "(187, 'Câmera de Ação Insta360 One R', 10, 400.0)\n",
            "(188, 'Fone de Ouvido Beats Solo Pro', 35, 220.0)\n",
            "(189, 'Caixa de Som Ultimate Ears BOOM 3', 30, 130.0)\n",
            "(190, 'Tablet Lenovo Tab M10', 25, 200.0)\n",
            "(191, 'Impressora Canon PIXMA G3110', 15, 150.0)\n",
            "(192, 'Smartphone Motorola Moto G9 Plus', 35, 250.0)\n",
            "(193, 'Notebook HP Omen 15', 15, 1200.0)\n",
            "(194, 'Mouse Logitech G502 HERO', 50, 60.0)\n",
            "(195, 'Fone de Ouvido Sony WF-1000XM3', 40, 180.0)\n",
            "(196, 'Teclado Corsair K63 Wireless', 20, 130.0)\n",
            "(197, 'Monitor Philips 328E1CA 32\" 4K', 14, 600.0)\n",
            "(198, 'Console PlayStation Classic', 25, 50.0)\n",
            "(199, 'SSD Crucial MX500 1TB', 30, 120.0)\n",
            "(200, 'Smart TV LG OLED 65\"', 8, 2000.0)\n",
            "(201, 'Tablet Amazon Fire HD 8', 40, 150.0)\n",
            "(202, 'Câmera Panasonic Lumix G7', 12, 600.0)\n",
            "(203, 'Smartwatch Garmin Forerunner 945', 15, 500.0)\n",
            "(204, 'PlayStation VR', 20, 300.0)\n",
            "(205, 'Console Xbox One X', 25, 400.0)\n",
            "(206, 'Câmera Nikon D5600', 18, 700.0)\n",
            "(207, 'Smartphone Nokia 7.2', 30, 250.0)\n",
            "(208, 'Monitor MSI Optix MAG272C', 14, 400.0)\n",
            "(209, 'Fone de Ouvido AKG N700NC', 25, 150.0)\n",
            "(210, 'Notebook Samsung Galaxy Book Flex', 12, 1400.0)\n",
            "(211, 'Roteador ASUS RT-AX88U', 20, 300.0)\n",
            "(212, 'Headset Razer Kraken X', 40, 50.0)\n",
            "(213, 'SSD SanDisk Ultra 3D 1TB', 35, 140.0)\n",
            "(214, 'Mouse Logitech M720 Triathlon', 50, 40.0)\n",
            "(215, 'Teclado HyperX Alloy Elite 2', 22, 110.0)\n",
            "(216, 'Hub USB Belkin 4 portas', 55, 20.0)\n",
            "(217, 'Caixa de Som Sony XB12', 40, 50.0)\n",
            "(218, 'Smartphone Realme 7 Pro', 30, 400.0)\n",
            "(219, 'Notebook Huawei MateBook X Pro', 15, 1500.0)\n",
            "(220, 'Drone DJI Phantom 4 Pro', 8, 1500.0)\n",
            "(221, 'Fone de Ouvido Skullcandy Crusher', 45, 70.0)\n",
            "(222, 'Impressora Lexmark MB2236adw', 18, 300.0)\n",
            "(223, 'Teclado Mecânico Keychron K2', 25, 100.0)\n",
            "(224, 'Monitor Samsung CHG90 49\"', 10, 1000.0)\n",
            "(225, 'SSD ADATA XPG SX8200 Pro 1TB', 30, 140.0)\n",
            "(226, 'Webcam Microsoft LifeCam HD-3000', 50, 30.0)\n",
            "(227, 'Notebook Dell G5 15', 20, 1100.0)\n",
            "(228, 'Teclado SteelSeries Apex Pro', 15, 180.0)\n",
            "(229, 'Monitor ASUS TUF Gaming VG27AQ', 22, 450.0)\n",
            "(230, 'Fone de Ouvido Sennheiser HD 599', 25, 180.0)\n",
            "(231, 'Notebook MSI GS66 Stealth', 12, 2000.0)\n",
            "(232, 'Roteador Netgear Nighthawk AX12', 15, 400.0)\n",
            "(233, 'Console Xbox Series X', 30, 500.0)\n",
            "(234, 'Smartphone Sony Xperia 1 II', 18, 800.0)\n",
            "(235, 'Câmera Canon EOS M50', 10, 600.0)\n",
            "(236, 'Smart TV Samsung QLED 75\"', 5, 2500.0)\n",
            "(237, 'Teclado Mecânico Corsair K60 RGB Pro', 20, 90.0)\n",
            "(238, 'Mouse Razer Basilisk V2', 40, 70.0)\n",
            "(239, 'Fone de Ouvido JBL Live 650BTNC', 35, 120.0)\n",
            "(240, 'Notebook Acer Nitro 5', 25, 900.0)\n",
            "(241, 'SSD Samsung 860 QVO 2TB', 22, 180.0)\n",
            "(242, 'Tablet Apple iPad Mini 5', 18, 500.0)\n",
            "(243, 'Monitor Dell 27\" QHD', 20, 350.0)\n",
            "(244, 'Smartphone LG G8X ThinQ', 28, 450.0)\n",
            "(245, 'Cadeira Gamer Cougar Armor One', 15, 250.0)\n",
            "(246, 'SSD Kingston A2000 1TB', 30, 120.0)\n",
            "(247, 'Console PlayStation 4 Pro', 20, 350.0)\n",
            "(248, 'Headset Logitech G Pro X', 25, 100.0)\n",
            "(249, 'Mousepad HyperX Fury S Pro', 50, 30.0)\n",
            "(250, 'Monitor Gigabyte Aorus FI27Q', 15, 500.0)\n",
            "(251, 'Câmera de Segurança TP-Link Tapo C200', 40, 50.0)\n",
            "(252, 'Smartphone ASUS ROG Phone 3', 18, 1000.0)\n",
            "(253, 'Laptop ASUS ROG Zephyrus G14', 12, 1500.0)\n",
            "(254, 'Fone de Ouvido Marshall Major III', 30, 80.0)\n",
            "(255, 'Impressora Brother MFC-L3770CDW', 18, 350.0)\n",
            "(256, 'Monitor LG UltraFine 5K', 10, 1200.0)\n",
            "(257, 'SSD Western Digital Black SN750 1TB', 30, 140.0)\n",
            "(258, 'Smartwatch Fitbit Versa 3', 20, 230.0)\n",
            "(259, 'Teclado Logitech G915 TKL', 25, 200.0)\n",
            "(260, 'Drone DJI Mini 2', 12, 450.0)\n",
            "(261, 'SSD Crucial P5 1TB', 35, 140.0)\n",
            "(262, 'Smartphone Vivo V21', 28, 400.0)\n",
            "(263, 'Monitor ASUS ProArt PA34VC', 12, 900.0)\n",
            "(264, 'Webcam NexiGo 1080p', 50, 40.0)\n",
            "(265, 'Notebook Lenovo Legion 5i', 15, 1200.0)\n",
            "(266, 'Teclado Razer Cynosa Chroma', 40, 60.0)\n",
            "(267, 'Headset Corsair Void RGB Elite', 35, 90.0)\n",
            "(268, 'Smartphone Realme X50 Pro', 30, 700.0)\n",
            "(269, 'Tablet Microsoft Surface Go 2', 18, 500.0)\n",
            "(270, 'Mouse Cooler Master MM710', 50, 50.0)\n",
            "(271, 'Fone de Ouvido Sony MDR-ZX110', 60, 20.0)\n",
            "(272, 'Monitor Dell P2419H 24\" Full HD', 22, 150.0)\n",
            "(273, 'Notebook HP Envy 13', 15, 1000.0)\n",
            "(274, 'Impressora Canon PIXMA TS8320', 20, 200.0)\n",
            "(275, 'Mouse Logitech MX Anywhere 2S', 35, 50.0)\n",
            "(276, 'Caixa de Som Ultimate Ears WONDERBOOM 2', 30, 80.0)\n",
            "(277, 'Drone Parrot Anafi', 10, 600.0)\n",
            "(278, 'SSD Kingston KC2500 1TB', 25, 140.0)\n",
            "(279, 'Fone de Ouvido Beats Studio3', 20, 280.0)\n",
            "(280, 'Tablet Lenovo Tab P11 Pro', 22, 450.0)\n",
            "(281, 'Teclado Mecânico Anne Pro 2', 18, 120.0)\n",
            "(282, 'Notebook Asus TUF Gaming F15', 20, 950.0)\n",
            "(283, 'Smartphone Nokia 8.3 5G', 25, 500.0)\n",
            "(284, 'Monitor Philips 276E9QDSB 27\"', 18, 180.0)\n",
            "(285, 'Teclado Cooler Master CK552', 22, 80.0)\n",
            "(286, 'Câmera Nikon Z50', 10, 850.0)\n",
            "(287, 'Webcam Logitech Brio 4K', 20, 150.0)\n",
            "(288, 'Mousepad Razer Goliathus Extended Chroma', 40, 50.0)\n",
            "(289, 'SSD WD Black AN1500 1TB', 15, 250.0)\n",
            "(290, 'Drone Ryze Tello', 18, 100.0)\n",
            "(291, 'Console PlayStation 5 Digital Edition', 25, 450.0)\n",
            "(292, 'Fone de Ouvido Sony WH-XB900N', 35, 150.0)\n",
            "(293, 'Monitor Dell S3221QS 32\" 4K', 12, 450.0)\n",
            "(294, 'Tablet Amazon Fire 7', 40, 80.0)\n",
            "(295, 'Headset Logitech H390', 50, 30.0)\n",
            "(296, 'Notebook Samsung Galaxy Book S', 15, 1100.0)\n",
            "(297, 'Teclado Mecânico Glorious GMMK', 18, 100.0)\n",
            "(298, 'Monitor AOC 32\" Curvo', 14, 350.0)\n",
            "(299, 'SSD Samsung 870 EVO 1TB', 25, 150.0)\n",
            "(300, 'Teclado Redragon K552 Kumara', 40, 60.0)\n",
            "(301, 'Smartphone Huawei P40 Pro', 20, 800.0)\n",
            "(302, 'Notebook Dell XPS 15', 12, 1500.0)\n",
            "(303, 'Monitor Samsung Odyssey G9', 10, 1200.0)\n",
            "(304, 'Fone de Ouvido Bose QuietComfort 35 II', 30, 250.0)\n",
            "(305, 'Smartwatch Garmin Forerunner 945', 25, 600.0)\n",
            "(306, 'SSD Kingston A400 480GB', 40, 70.0)\n",
            "(307, 'Console Nintendo Switch', 35, 300.0)\n",
            "(308, 'Teclado Mecânico Razer BlackWidow V3', 22, 140.0)\n",
            "(309, 'Smartphone Google Pixel 5', 18, 700.0)\n",
            "(310, 'Fone de Ouvido AKG K702', 20, 220.0)\n",
            "(311, 'Monitor ASUS TUF Gaming VG259Q', 25, 280.0)\n",
            "(312, 'Drone DJI Mavic Air 2', 15, 1000.0)\n",
            "(313, 'Notebook HP Omen 15', 18, 1300.0)\n",
            "(314, 'SSD Samsung 980 Pro 1TB', 30, 200.0)\n",
            "(315, 'Fone de Ouvido Audio-Technica ATH-M50x', 25, 170.0)\n",
            "(316, 'Monitor BenQ EX2780Q', 12, 350.0)\n",
            "(317, 'Smartwatch Samsung Galaxy Watch 3', 22, 400.0)\n",
            "(318, 'Câmera GoPro HERO9 Black', 20, 450.0)\n",
            "(319, 'Tablet Samsung Galaxy Tab S7+', 18, 900.0)\n",
            "(320, 'SSD Crucial MX500 1TB', 30, 130.0)\n",
            "(321, 'Teclado HyperX Alloy FPS Pro', 35, 80.0)\n",
            "(322, 'Mouse Logitech G502 Hero', 40, 60.0)\n",
            "(323, 'Fone de Ouvido Plantronics BackBeat PRO 2', 30, 180.0)\n",
            "(324, 'Monitor LG 34WN80C-B UltraWide', 15, 600.0)\n",
            "(325, 'Notebook Acer Predator Helios 300', 10, 1400.0)\n",
            "(326, 'SSD SanDisk Ultra 3D 1TB', 25, 150.0)\n",
            "(327, 'Fone de Ouvido Skullcandy Crusher', 30, 100.0)\n",
            "(328, 'Smartphone OnePlus 8 Pro', 18, 800.0)\n",
            "(329, 'Tablet Huawei MatePad Pro', 12, 750.0)\n",
            "(330, 'Monitor Dell U2720Q 27\" 4K', 14, 550.0)\n",
            "(331, 'Câmera Panasonic Lumix GH5', 10, 1300.0)\n",
            "(332, 'Teclado Roccat Vulcan 120 AIMO', 22, 130.0)\n",
            "(333, 'Headset HyperX Cloud Alpha', 30, 100.0)\n",
            "(334, 'Mouse Razer DeathAdder V2', 35, 70.0)\n",
            "(335, 'Drone Autel Robotics EVO II', 8, 1500.0)\n",
            "(336, 'Notebook Lenovo Yoga C940', 15, 1250.0)\n",
            "(337, 'Fone de Ouvido Sony WH-CH710N', 40, 120.0)\n",
            "(338, 'SSD PNY CS900 480GB', 35, 60.0)\n",
            "(339, 'Monitor Philips 328E1CA 32\" 4K Curved', 12, 450.0)\n",
            "(340, 'Smartwatch Apple Watch Series 6', 20, 500.0)\n",
            "(341, 'Console Xbox Series S', 30, 350.0)\n",
            "(342, 'Teclado SteelSeries Apex Pro', 18, 200.0)\n",
            "(343, 'Notebook ASUS ZenBook 14', 20, 1000.0)\n",
            "(344, 'Fone de Ouvido JBL Tune 750BTNC', 35, 130.0)\n",
            "(345, 'SSD Intel 660p 1TB', 22, 140.0)\n",
            "(346, 'Smartphone Xiaomi Mi 10', 25, 650.0)\n",
            "(347, 'Câmera Sony Alpha a7 III', 10, 1800.0)\n",
            "(348, 'Monitor AOC Agon AG352UCG6', 10, 850.0)\n",
            "(349, 'Teclado Redragon Draconic K530', 30, 70.0)\n",
            "(350, 'Mouse Corsair Scimitar RGB Elite', 35, 80.0)\n",
            "(351, 'Fone de Ouvido Sennheiser HD 560S', 20, 190.0)\n",
            "(352, 'SSD ADATA XPG SX8200 Pro 1TB', 25, 150.0)\n",
            "(353, 'Smartphone OPPO Find X2 Pro', 18, 900.0)\n",
            "(354, 'Drone DJI Phantom 4 Pro', 10, 1200.0)\n",
            "(355, 'Notebook MSI GE75 Raider', 10, 1700.0)\n",
            "(356, 'Monitor Samsung CRG9 49\" Curved', 8, 1300.0)\n",
            "(357, 'Fone de Ouvido Jabra Elite 85h', 30, 220.0)\n",
            "(358, 'Teclado Logitech K780', 28, 90.0)\n",
            "(359, 'Smartwatch Fitbit Charge 4', 25, 150.0)\n",
            "(360, 'Console PlayStation 5', 15, 500.0)\n",
            "(361, 'SSD Western Digital Blue 1TB', 30, 120.0)\n",
            "(362, 'Mouse HyperX Pulsefire FPS Pro', 40, 50.0)\n",
            "(363, 'Câmera Canon EOS R6', 8, 1900.0)\n",
            "(364, 'Monitor LG 32GK850G-B', 12, 400.0)\n",
            "(365, 'Smartphone Realme 7 Pro', 25, 350.0)\n",
            "(366, 'Tablet Samsung Galaxy Tab A 8.0', 40, 160.0)\n",
            "(367, 'Fone de Ouvido Grado SR80e', 22, 100.0)\n",
            "(368, 'SSD Seagate FireCuda 520 1TB', 20, 180.0)\n",
            "(369, 'Teclado Anne Pro 2', 28, 120.0)\n",
            "(370, 'Notebook Dell G5 15', 18, 1100.0)\n",
            "(371, 'Monitor ASUS VG279Q 27\" Full HD', 25, 250.0)\n",
            "(372, 'Fone de Ouvido Bose SoundSport Free', 30, 200.0)\n",
            "(373, 'SSD Patriot Viper VPN100 1TB', 25, 140.0)\n",
            "(374, 'Mouse Zowie EC2-B', 40, 65.0)\n",
            "(375, 'Câmera Fujifilm X-T30', 12, 900.0)\n",
            "(376, 'Teclado Corsair K95 RGB Platinum', 22, 180.0)\n",
            "(377, 'Headset SteelSeries Arctis 7', 28, 120.0)\n",
            "(378, 'SSD Kingston UV500 960GB', 30, 120.0)\n",
            "(379, 'Monitor Dell Alienware AW3418DW', 12, 900.0)\n",
            "(380, 'Smartphone Motorola Edge+', 15, 800.0)\n",
            "(381, 'Tablet Apple iPad Air 4', 18, 700.0)\n",
            "(382, 'Fone de Ouvido AKG N700NC M2', 25, 250.0)\n",
            "(383, 'Teclado Razer Huntsman Mini', 30, 100.0)\n",
            "(384, 'SSD Corsair Force MP600 1TB', 22, 170.0)\n",
            "(385, 'Drone PowerVision PowerEgg X', 8, 1000.0)\n",
            "(386, 'Notebook ASUS VivoBook S14', 18, 850.0)\n",
            "(387, 'Mouse Logitech G Pro Wireless', 35, 120.0)\n",
            "(388, 'Headset Corsair HS60 Haptic', 25, 100.0)\n",
            "(389, 'Monitor AOC CQ32G1 31.5\" Curved', 15, 300.0)\n",
            "(390, 'Fone de Ouvido Shure SE215', 30, 100.0)\n",
            "(391, 'SSD Crucial P2 1TB', 28, 130.0)\n",
            "(392, 'Teclado Cooler Master MK850', 22, 150.0)\n",
            "(393, 'Smartwatch Huawei Watch GT 2e', 30, 170.0)\n",
            "(394, 'Console Nintendo Switch Lite', 25, 200.0)\n",
            "(395, 'Drone Skydio 2', 10, 1500.0)\n",
            "(396, 'Notebook Acer Swift 3', 20, 750.0)\n",
            "(397, 'SSD Team Group MP33 1TB', 35, 120.0)\n",
            "(398, 'Fone de Ouvido Edifier W860NB', 28, 90.0)\n",
            "(399, 'Monitor BenQ PD3220U 32\" 4K', 10, 1100.0)\n",
            "(400, 'Smartphone Vivo X50 Pro', 18, 700.0)\n",
            "\n",
            "Dados Transformados da Filial 2:\n",
            "(1, 'Smartphone Samsung Galaxy Note 20', 22, 950.0)\n",
            "(2, 'Laptop Dell XPS 13', 21, 55.5)\n",
            "(3, 'Monitor LG UltraWide', 22, 61.0)\n",
            "(4, 'Teclado Mecânico Corsair', 23, 66.5)\n",
            "(5, 'Mouse Gamer Razer DeathAdder', 24, 72.0)\n",
            "(6, 'Headset HyperX Cloud II', 25, 77.5)\n",
            "(7, 'Smartwatch Apple Watch Series 6', 26, 83.0)\n",
            "(8, 'Console PlayStation 5', 27, 88.5)\n",
            "(9, 'Caixa de Som JBL Flip 5', 28, 94.0)\n",
            "(10, 'Tablet Samsung Galaxy Tab S7', 29, 99.5)\n",
            "(11, 'Câmera GoPro HERO9', 30, 105.0)\n",
            "(12, \"TV Samsung 55' 4K UHD\", 31, 110.5)\n",
            "(13, 'Geladeira Electrolux Frost Free', 32, 116.0)\n",
            "(14, 'Microondas Panasonic 32L', 33, 121.5)\n",
            "(15, 'Máquina de Lavar LG 11kg', 34, 127.0)\n",
            "(16, 'Fogão Brastemp 4 bocas', 35, 132.5)\n",
            "(17, 'Ar Condicionado LG Dual Inverter', 36, 138.0)\n",
            "(18, 'Impressora HP DeskJet 3776', 37, 143.5)\n",
            "(19, 'Projetor Epson PowerLite', 38, 149.0)\n",
            "(20, 'Drone DJI Mini 2', 39, 154.5)\n",
            "(21, 'Fone de Ouvido Bluetooth JBL', 40, 160.0)\n",
            "(22, 'Notebook Acer Aspire 5', 41, 165.5)\n",
            "(23, 'Ventilador Arno Turbo', 42, 171.0)\n",
            "(24, 'Monitor Gamer Samsung Curved', 43, 176.5)\n",
            "(25, 'Teclado Logitech K380', 44, 182.0)\n",
            "(26, 'Mouse Sem Fio Microsoft', 45, 187.5)\n",
            "(27, 'SSD Kingston 480GB', 46, 193.0)\n",
            "(28, 'HD Externo Seagate 2TB', 47, 198.5)\n",
            "(29, 'Cadeira Gamer DXRacer', 48, 204.0)\n",
            "(30, 'Volante Logitech G29', 49, 209.5)\n",
            "(31, 'Câmera Canon EOS Rebel', 20, 215.0)\n",
            "(32, 'Caixa de Ferramentas Bosch', 21, 220.5)\n",
            "(33, 'Furadeira Black+Decker', 22, 226.0)\n",
            "(34, 'Smartphone Xiaomi Redmi Note 10', 23, 231.5)\n",
            "(35, 'Placa de Vídeo Nvidia RTX 3080', 24, 237.0)\n",
            "(36, 'Memória RAM HyperX 16GB', 25, 242.5)\n",
            "(37, 'Cafeteira Nespresso Essenza Mini', 26, 248.0)\n",
            "(38, 'Máquina de Costura Singer', 27, 253.5)\n",
            "(39, 'Purificador de Água Consul', 28, 259.0)\n",
            "(40, 'Forno Elétrico Mondial', 29, 264.5)\n",
            "(41, 'Smartphone Motorola Moto G9 Plus', 30, 270.0)\n",
            "(42, 'Notebook Lenovo Ideapad', 31, 275.5)\n",
            "(43, 'Bicicleta Caloi 29 Mountain Bike', 32, 281.0)\n",
            "(44, \"Smart TV LG 50' 4K\", 33, 286.5)\n",
            "(45, 'Câmera Sony Alpha A6400', 34, 292.0)\n",
            "(46, 'Home Theater Yamaha', 35, 297.5)\n",
            "(47, \"iPad Pro 12.9' Apple\", 36, 303.0)\n",
            "(48, 'Kindle Paperwhite', 37, 308.5)\n",
            "(49, 'HD Interno WD 1TB', 38, 314.0)\n",
            "(50, 'Placa Mãe ASUS Prime', 39, 319.5)\n",
            "(51, 'Processador Intel Core i7', 40, 325.0)\n",
            "(52, 'Smartphone OnePlus 8T', 41, 330.5)\n",
            "(53, \"Monitor BenQ 27'\", 42, 336.0)\n",
            "(54, 'Impressora Multifuncional Epson', 43, 341.5)\n",
            "(55, 'Switch Nintendo', 44, 347.0)\n",
            "(56, 'Mousepad SteelSeries QcK', 45, 352.5)\n",
            "(57, 'Lâmpada Inteligente Philips Hue', 46, 358.0)\n",
            "(58, 'Roteador TP-Link Archer', 47, 363.5)\n",
            "(59, 'Smartphone Huawei P40 Pro', 48, 369.0)\n",
            "(60, 'Câmera Nikon D5600', 49, 374.5)\n",
            "(61, 'Fone de Ouvido Sony WH-1000XM4', 20, 380.0)\n",
            "(62, 'Mouse Logitech MX Master 3', 21, 385.5)\n",
            "(63, 'Smartphone Google Pixel 5', 22, 391.0)\n",
            "(64, 'Notebook Samsung Galaxy Book', 23, 396.5)\n",
            "(65, 'Tablet Lenovo Tab M10', 24, 402.0)\n",
            "(66, \"Monitor AOC 24' IPS\", 25, 407.5)\n",
            "(67, 'Placa de Vídeo AMD Radeon RX 570', 26, 413.0)\n",
            "(68, 'Console Xbox Series X', 27, 418.5)\n",
            "(69, 'Controle Xbox Elite', 28, 424.0)\n",
            "(70, 'Carregador Portátil Xiaomi 20000mAh', 29, 429.5)\n",
            "(71, 'Som Automotivo Pioneer', 30, 435.0)\n",
            "(72, 'Mochila Targus para Laptop', 31, 440.5)\n",
            "(73, 'Relógio Garmin Forerunner 45', 32, 446.0)\n",
            "(74, 'JBL Boombox 2', 33, 451.5)\n",
            "(75, \"Monitor Ultrawide LG 34'\", 34, 457.0)\n",
            "(76, 'Notebook Asus VivoBook', 35, 462.5)\n",
            "(77, 'Teclado Gamer Razer Cynosa', 36, 468.0)\n",
            "(78, 'Adaptador USB-C para HDMI', 37, 473.5)\n",
            "(79, 'Microfone Blue Yeti', 38, 479.0)\n",
            "(80, 'Câmera de Segurança Intelbras', 39, 484.5)\n",
            "(81, 'Soundbar Samsung HW-T450', 40, 490.0)\n",
            "(82, 'Celular Nokia 3310', 41, 495.5)\n",
            "(83, 'Notebook HP Pavilion', 42, 501.0)\n",
            "(84, 'Caixa de Som Bluetooth Sony', 43, 506.5)\n",
            "(85, 'Fone Bluetooth Xiaomi Redmi AirDots', 44, 512.0)\n",
            "(86, 'Power Bank Anker 10000mAh', 45, 517.5)\n",
            "(87, 'Switch Gigabit TP-Link', 46, 523.0)\n",
            "(88, 'Impressora Laser Brother', 47, 528.5)\n",
            "(89, 'Mouse Gamer SteelSeries Rival', 48, 534.0)\n",
            "(90, 'Adaptador de Tomada Universal', 49, 539.5)\n",
            "(91, 'Suporte Articulado ELG para TV', 20, 545.0)\n",
            "(92, \"Monitor LED Acer 27'\", 21, 550.5)\n",
            "(93, 'Webcam Logitech C920', 22, 556.0)\n",
            "(94, 'HD Externo Toshiba Canvio 1TB', 23, 561.5)\n",
            "(95, 'Placa de Vídeo EVGA GTX 1660', 24, 567.0)\n",
            "(96, 'Fonte Corsair 650W', 25, 572.5)\n",
            "(97, 'Cooler Master Hyper 212', 26, 578.0)\n",
            "(98, 'SSD M.2 Samsung 1TB', 27, 583.5)\n",
            "(99, 'Hub USB Anker', 28, 589.0)\n",
            "(100, 'Kit Teclado e Mouse Microsoft', 29, 594.5)\n",
            "(101, 'Fone Intra-Auricular JBL', 30, 50.0)\n",
            "(102, 'Projetor Portátil Xiaomi', 31, 55.5)\n",
            "(103, 'Placa Captura Elgato', 32, 61.0)\n",
            "(104, 'Volante Thrustmaster T300', 33, 66.5)\n",
            "(105, 'Joystick Logitech Extreme 3D', 34, 72.0)\n",
            "(106, 'Tablet Amazon Fire 7', 35, 77.5)\n",
            "(107, 'Câmera de Ação Sony', 36, 83.0)\n",
            "(108, 'Smartphone Vivo X60 Pro', 37, 88.5)\n",
            "(109, 'Fone de Ouvido AKG N700NC', 38, 94.0)\n",
            "(110, 'Smartphone Oppo Find X3', 39, 99.5)\n",
            "(111, 'Carregador Rápido Samsung 45W', 40, 105.0)\n",
            "(112, \"Smart TV Sony 75' 4K\", 41, 110.5)\n",
            "(113, 'Teclado Mecânico SteelSeries', 42, 116.0)\n",
            "(114, 'Fone Bluetooth Bose QuietComfort', 43, 121.5)\n",
            "(115, 'SSD Externo WD 500GB', 44, 127.0)\n",
            "(116, \"Monitor Dell 32' 4K\", 45, 132.5)\n",
            "(117, 'Impressora 3D Creality', 46, 138.0)\n",
            "(118, 'Cadeira Gamer ThunderX3', 47, 143.5)\n",
            "(119, 'Projetor LG CineBeam', 48, 149.0)\n",
            "(120, 'HomePod Mini Apple', 49, 154.5)\n",
            "(121, 'Placa Mãe Gigabyte Z490', 20, 160.0)\n",
            "(122, 'Processador AMD Ryzen 9', 21, 165.5)\n",
            "(123, 'Smartphone Asus ROG Phone 5', 22, 171.0)\n",
            "(124, 'Fone Gamer HyperX Cloud Alpha', 23, 176.5)\n",
            "(125, 'Console Sega Mega Drive', 24, 182.0)\n",
            "(126, 'Kit Ferramentas Vonder', 25, 187.5)\n",
            "(127, \"Monitor Philips 27' Full HD\", 26, 193.0)\n",
            "(128, 'Câmera DSLR Nikon D750', 27, 198.5)\n",
            "(129, 'Teclado Mecânico Logitech', 28, 204.0)\n",
            "(130, 'Câmera IP D-Link', 29, 209.5)\n",
            "(131, 'Suporte Veicular Baseus', 30, 215.0)\n",
            "(132, 'Placa de Vídeo MSI GTX 1650', 31, 220.5)\n",
            "(133, 'Smartwatch Xiaomi Amazfit', 32, 226.0)\n",
            "(134, 'Relógio Casio G-Shock', 33, 231.5)\n",
            "(135, 'Tablet Multilaser M8', 34, 237.0)\n",
            "(136, \"Monitor Acer Predator 32'\", 35, 242.5)\n",
            "(137, 'Smartphone Realme 7 Pro', 36, 248.0)\n",
            "(138, 'Teclado Corsair K95', 37, 253.5)\n",
            "(139, 'Caixa Som Bluetooth JBL Charge 4', 38, 259.0)\n",
            "(140, 'Carregador Indução Samsung', 39, 264.5)\n",
            "(141, \"Smart TV Panasonic 65' 4K\", 40, 270.0)\n",
            "(142, 'Câmera Mirrorless Fujifilm X-T4', 41, 275.5)\n",
            "(143, 'Notebook Dell Inspiron 15', 42, 281.0)\n",
            "(144, 'Teclado Gamer HyperX Alloy', 43, 286.5)\n",
            "(145, 'Microfone de Lapela Boya', 44, 292.0)\n",
            "(146, 'Notebook Dell G5 15 Gaming', 45, 297.5)\n",
            "(147, 'Teclado Razer Ornata Chroma', 46, 303.0)\n",
            "(148, 'SSD PNY XLR8 CS3030 1TB', 47, 308.5)\n",
            "(149, 'Console Sony PlayStation VR', 48, 314.0)\n",
            "(150, 'Smartwatch Samsung Galaxy Watch Active 2', 49, 319.5)\n",
            "(151, 'Mouse Razer DeathAdder V2 Pro', 20, 325.0)\n",
            "(152, 'Fone de Ouvido Jabra Elite 85t', 21, 330.5)\n",
            "(153, 'Monitor Samsung Odyssey G7 27\"', 22, 336.0)\n",
            "(154, 'SSD Crucial X8 1TB', 23, 341.5)\n",
            "(155, 'Teclado HyperX Alloy Core RGB', 24, 347.0)\n",
            "(156, 'Notebook HP Omen', 25, 352.5)\n",
            "(157, 'Smartphone Oppo Find X3 Pro', 26, 358.0)\n",
            "(158, 'Headset Razer BlackShark V2 Pro', 27, 363.5)\n",
            "(159, 'SSD Kingston A400 480GB', 28, 369.0)\n",
            "(160, 'Console Microsoft Xbox Series X Halo Infinite', 29, 374.5)\n",
            "(161, 'Monitor LG 27GL850-B 27\" QHD', 30, 380.0)\n",
            "(162, 'Fone de Ouvido Plantronics BackBeat FIT 6100', 31, 385.5)\n",
            "(163, 'Teclado Logitech G213 Prodigy', 32, 391.0)\n",
            "(164, 'SSD WD My Passport 1TB', 33, 396.5)\n",
            "(165, 'Smartwatch Huawei Watch GT 2', 34, 402.0)\n",
            "(166, 'Mouse Corsair Ironclaw RGB', 35, 407.5)\n",
            "(167, 'Notebook Lenovo IdeaPad Flex 5', 36, 413.0)\n",
            "(168, 'Monitor Dell S2721QS 27\" 4K', 37, 418.5)\n",
            "(169, 'Fone de Ouvido Sony WH-XB900N', 38, 424.0)\n",
            "(170, 'SSD Samsung 970 EVO Plus 2TB', 39, 429.5)\n",
            "(171, 'Teclado Redragon K552 Kumara', 40, 435.0)\n",
            "(172, 'Headset Logitech G Pro X Wireless', 41, 440.5)\n",
            "(173, 'Smartphone Realme X50 Pro', 42, 446.0)\n",
            "(174, 'Console Nintendo Wii U', 43, 451.5)\n",
            "(175, 'Fone de Ouvido Skullcandy Crusher Evo', 44, 457.0)\n",
            "(176, 'SSD Kingston A2000 512GB', 45, 462.5)\n",
            "(177, 'Monitor AOC 27B2H 27\" Full HD', 46, 468.0)\n",
            "(178, 'Teclado Cooler Master CK530 V2', 47, 473.5)\n",
            "(179, 'Notebook ASUS ZenBook Flip 13', 48, 479.0)\n",
            "(180, 'Fone de Ouvido Marshall Monitor II ANC', 49, 484.5)\n",
            "(181, 'SSD WD Black SN750 2TB', 20, 490.0)\n",
            "(182, 'Smartwatch Apple Watch Series 6', 21, 495.5)\n",
            "(183, 'Mouse SteelSeries Sensei Ten', 22, 501.0)\n",
            "(184, 'Console Microsoft Xbox Series S Fortnite Bundle', 23, 506.5)\n",
            "(185, 'Monitor BenQ EX2780Q 27\" QHD', 24, 512.0)\n",
            "(186, 'Fone de Ouvido Sony MDR-XB50BS', 25, 517.5)\n",
            "(187, 'Teclado Razer Cynosa V2', 26, 523.0)\n",
            "(188, 'Smartphone Samsung Galaxy A71', 27, 528.5)\n",
            "(189, 'SSD SanDisk Ultra 3D 1TB', 28, 534.0)\n",
            "(190, 'Notebook Acer Swift 3', 29, 539.5)\n",
            "(191, 'Headset Turtle Beach Elite Pro 2', 30, 545.0)\n",
            "(192, 'Monitor LG 32GN600-B 32\" QHD', 31, 550.5)\n",
            "(193, 'Mouse Razer Mamba Elite', 32, 556.0)\n",
            "(194, 'Fone de Ouvido Beats Powerbeats Pro', 33, 561.5)\n",
            "(195, 'Teclado Redragon K530 Draconic', 34, 567.0)\n",
            "(196, 'SSD Samsung Portable SSD T5 1TB', 35, 572.5)\n",
            "(197, 'Console Sony PlayStation 5 Standard Edition', 36, 578.0)\n",
            "(198, 'Smartwatch Samsung Galaxy Watch 3', 37, 583.5)\n",
            "(199, 'Monitor AOC AGON AG493UCX 49\" UltraWide', 38, 589.0)\n",
            "(200, 'Notebook HP Spectre x360', 39, 594.5)\n",
            "(201, 'Fone de Ouvido HyperX Cloud Alpha S', 40, 50.0)\n",
            "(202, 'SSD Crucial BX500 1TB', 41, 55.5)\n",
            "(203, 'Teclado Corsair K68 RGB', 42, 61.0)\n",
            "(204, 'Mouse Logitech G703 Lightspeed', 43, 66.5)\n",
            "(205, 'Monitor ASUS TUF Gaming VG289Q 28\" 4K', 44, 72.0)\n",
            "(206, 'Smartphone OnePlus 8T', 45, 77.5)\n",
            "(207, 'Fone de Ouvido JBL Reflect Flow', 46, 83.0)\n",
            "(208, 'Teclado Ducky One 2 SF', 47, 88.5)\n",
            "(209, 'SSD ADATA XPG SX8200 Pro 2TB', 48, 94.0)\n",
            "(210, 'Headset SteelSeries Arctis 7P Wireless', 49, 99.5)\n",
            "(211, 'Monitor Samsung UR59C 32\" Curved 4K', 20, 105.0)\n",
            "(212, 'Notebook Lenovo Yoga C740', 21, 110.5)\n",
            "(213, 'Mouse Corsair Dark Core RGB Pro', 22, 116.0)\n",
            "(214, 'Fone de Ouvido Sony WF-SP800N', 23, 121.5)\n",
            "(215, 'Teclado Logitech G Pro X', 24, 127.0)\n",
            "(216, 'SSD Seagate FireCuda 520 2TB', 25, 132.5)\n",
            "(217, 'Console Microsoft Xbox One S', 26, 138.0)\n",
            "(218, 'Smartphone Xiaomi Mi 10T Pro', 27, 143.5)\n",
            "(219, 'Monitor ASUS ProArt PA248QV 24\" WUXGA', 28, 149.0)\n",
            "(220, 'Fone de Ouvido AKG N60NC Wireless', 29, 154.5)\n",
            "(221, 'SSD WD Blue SN550 1TB', 30, 160.0)\n",
            "(222, 'Teclado Corsair K55 RGB Pro XT', 31, 165.5)\n",
            "(223, 'Notebook ASUS ROG Zephyrus G14', 32, 171.0)\n",
            "(224, 'Headset Razer Kraken Ultimate', 33, 176.5)\n",
            "(225, 'Mouse Logitech G604 Lightspeed', 34, 182.0)\n",
            "(226, 'Smartphone Motorola Edge 20', 35, 187.5)\n",
            "(227, 'Monitor Philips 278E1A 27\" 4K', 36, 193.0)\n",
            "(228, 'Fone de Ouvido Sennheiser HD 650', 37, 198.5)\n",
            "(229, 'Teclado SteelSeries Apex Pro', 38, 204.0)\n",
            "(230, 'SSD Samsung 860 QVO 1TB', 39, 209.5)\n",
            "(231, 'Console Sony PlayStation 4 Slim', 40, 215.0)\n",
            "(232, 'Smartwatch Amazfit Bip U Pro', 41, 220.5)\n",
            "(233, 'Fone de Ouvido JBL Tune 125TWS', 42, 226.0)\n",
            "(234, 'Monitor Dell UltraSharp U4320Q 43\" 4K', 43, 231.5)\n",
            "(235, 'Mouse Logitech MX Vertical', 44, 237.0)\n",
            "(236, 'SSD PNY CS900 1TB', 45, 242.5)\n",
            "(237, 'Teclado Roccat Vulcan TKL', 46, 248.0)\n",
            "(238, 'Notebook Acer ConceptD 7', 47, 253.5)\n",
            "(239, 'Fone de Ouvido Beats Studio3 Wireless', 48, 259.0)\n",
            "(240, 'Console Microsoft Xbox Series X', 49, 264.5)\n",
            "(241, 'Monitor Samsung CHG90 49\" UltraWide', 20, 270.0)\n",
            "(242, 'SSD Crucial P2 2TB', 21, 275.5)\n",
            "(243, 'Teclado Logitech G815 LIGHTSYNC', 22, 281.0)\n",
            "(244, 'Mouse Razer Viper Mini', 23, 286.5)\n",
            "(245, 'Fone de Ouvido Bose QuietComfort 35 II', 24, 292.0)\n",
            "(246, 'Notebook Dell XPS 15', 25, 297.5)\n",
            "(247, 'Smartwatch Huawei Watch GT 2 Pro', 26, 303.0)\n",
            "(248, 'Teclado HyperX Alloy FPS Pro', 27, 308.5)\n",
            "(249, 'Console Nintendo Switch OLED', 28, 314.0)\n",
            "(250, 'SSD SanDisk Extreme Pro Portable 1TB', 29, 319.5)\n",
            "(251, 'Monitor LG 27UL500-W 27\" 4K', 30, 325.0)\n",
            "(252, 'Fone de Ouvido Audio-Technica ATH-M70X', 31, 330.5)\n",
            "(253, 'Teclado Redragon K556 RGB', 32, 336.0)\n",
            "(254, 'Headset Logitech G933 Artemis Spectrum', 33, 341.5)\n",
            "(255, 'Mouse Zowie FK1-B', 34, 347.0)\n",
            "(256, 'Smartphone Google Pixel 5', 35, 352.5)\n",
            "(257, 'Monitor ASUS VG279Q 27\" Full HD', 36, 358.0)\n",
            "(258, 'Fone de Ouvido Razer Hammerhead True Wireless Pro', 37, 363.5)\n",
            "(259, 'Teclado Ducky One 2 RGB', 38, 369.0)\n",
            "(260, 'Notebook HP Envy 13', 39, 374.5)\n",
            "(261, 'SSD Samsung 970 EVO 1TB', 40, 380.0)\n",
            "(262, 'Console Sony PlayStation 5 Digital Edition', 41, 385.5)\n",
            "(263, 'Smartwatch Garmin Forerunner 245', 42, 391.0)\n",
            "(264, 'Mouse Logitech G502 HERO', 43, 396.5)\n",
            "(265, 'Fone de Ouvido Beyerdynamic DT 990 Pro', 44, 402.0)\n",
            "(266, 'Monitor Dell P2419H 24\" Full HD', 45, 407.5)\n",
            "(267, 'Teclado Corsair K55 RGB', 46, 413.0)\n",
            "(268, 'Headset Razer Nari Ultimate', 47, 418.5)\n",
            "(269, 'Smartphone Xiaomi Redmi Note 10', 48, 424.0)\n",
            "(270, 'SSD Kingston NV1 1TB', 49, 429.5)\n",
            "(271, 'Notebook Lenovo ThinkPad X1 Carbon', 20, 435.0)\n",
            "(272, 'Fone de Ouvido Jabra Elite Active 75t', 21, 440.5)\n",
            "(273, 'Teclado Logitech G910 Orion Spectrum', 22, 446.0)\n",
            "(274, 'Monitor AOC 24G2 24\" 144Hz', 23, 451.5)\n",
            "(275, 'Mouse SteelSeries Rival 600', 24, 457.0)\n",
            "(276, 'Smartphone Motorola Moto G Power', 25, 462.5)\n",
            "(277, 'SSD Crucial MX500 2TB', 26, 468.0)\n",
            "(278, 'Headset HyperX Cloud Stinger', 27, 473.5)\n",
            "(279, 'Teclado Razer BlackWidow Lite', 28, 479.0)\n",
            "(280, 'Monitor BenQ Zowie XL2411P 24\" 144Hz', 29, 484.5)\n",
            "(281, 'Fone de Ouvido Sennheiser CX 400BT', 30, 490.0)\n",
            "(282, 'Notebook ASUS ROG Strix Scar 15', 31, 495.5)\n",
            "(283, 'Smartwatch Amazfit GTS 2', 32, 501.0)\n",
            "(284, 'Mouse Razer Basilisk V3', 33, 506.5)\n",
            "(285, 'SSD WD Blue 3D NAND 1TB', 34, 512.0)\n",
            "(286, 'Teclado Logitech K380', 35, 517.5)\n",
            "(287, 'Monitor ViewSonic VX2758-2KPC 27\" QHD', 36, 523.0)\n",
            "(288, 'Fone de Ouvido Sony WH-CH710N', 37, 528.5)\n",
            "(289, 'Notebook Dell Inspiron 15', 38, 534.0)\n",
            "(290, 'Smartphone OnePlus Nord 2', 39, 539.5)\n",
            "(291, 'SSD Seagate Barracuda 2TB', 40, 545.0)\n",
            "(292, 'Teclado HyperX Alloy Origins 60', 41, 550.5)\n",
            "(293, 'Monitor MSI Optix MAG272CQR 27\" Curved', 42, 556.0)\n",
            "(294, 'Fone de Ouvido JBL Club 950NC', 43, 561.5)\n",
            "(295, 'Mouse Corsair Harpoon RGB Wireless', 44, 567.0)\n",
            "(296, 'Smartwatch TicWatch Pro 3', 45, 572.5)\n",
            "(297, 'Notebook HP Pavilion 15', 46, 578.0)\n",
            "(298, 'SSD Sabrent Rocket Q 1TB', 47, 583.5)\n",
            "(299, 'Teclado Logitech K810 Bluetooth', 48, 589.0)\n",
            "(300, 'Fone de Ouvido Razer Opus', 49, 594.5)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import sqlite3 as pd\n",
        "import pandas as pd\n",
        "\n",
        "# Criar uma conexão com o banco de dados\n",
        "conn = sqlite3.connect('dados_transformados.db')\n",
        "\n",
        "# Carregar os dados das tabelas SQL diretamente para DataFrames do pandas\n",
        "dados_filial1 = pd.read_sql('SELECT * FROM vendas_filial1_transformadas', conn)\n",
        "dados_filial2 = pd.read_sql('SELECT * FROM vendas_filial2_transformadas', conn)\n",
        "\n",
        "# Exibir os dados carregados\n",
        "print(\"Dados Transformados da Filial 1 (do banco de dados SQL):\")\n",
        "print(dados_filial1.head())\n",
        "print(\"\\nDados Transformados da Filial 2 (do banco de dados SQL):\")\n",
        "print(dados_filial2.head())\n",
        "\n",
        "# Verificar se a coluna 'Valor Total' existe em ambos os DataFrames\n",
        "if 'Valor Total' not in dados_filial1.columns or 'Valor Total' not in dados_filial2.columns:\n",
        "    print(\"Erro: A coluna 'Valor Total' não existe em um dos DataFrames.\")\n",
        "else:\n",
        "    # Calcular a soma das vendas totais de cada filial\n",
        "    total_vendas_filial1 = dados_filial1['Valor Total'].sum()\n",
        "    total_vendas_filial2 = dados_filial2['Valor Total'].sum()\n",
        "\n",
        "    # Apresentar as vendas totais de cada filial\n",
        "    print(\"Total de Vendas da Filial 1:\", total_vendas_filial1)\n",
        "    print(\"Total de Vendas da Filial 2:\", total_vendas_filial2)\n",
        "\n",
        "    # Comparar as vendas totais entre as filiais\n",
        "    if total_vendas_filial1 > total_vendas_filial2:\n",
        "        print(\"A Filial 1 teve mais vendas do que a Filial 2.\")\n",
        "    elif total_vendas_filial1 < total_vendas_filial2:\n",
        "        print(\"A Filial 2 teve mais vendas do que a Filial 1.\")\n",
        "    else:\n",
        "        print(\"As vendas totais das duas filiais são iguais.\")\n",
        "\n",
        "# Fechar a conexão com o banco de dados\n",
        "conn.close()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mippdGsK_vHC",
        "outputId": "24a47868-8838-47f2-a72e-c48067333609"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Dados Transformados da Filial 1 (do banco de dados SQL):\n",
            "   ID do Produto                   Nome do Produto  Quantidade Vendida  \\\n",
            "0            101                Laptop Dell XPS 13                  20   \n",
            "1            102     Smartphone Samsung Galaxy S20                  30   \n",
            "2            103          Monitor LG UltraWide 34\"                  15   \n",
            "3            104  Teclado Mecânico Corsair K95 RGB                  25   \n",
            "4            105        Mouse Logitech MX Master 3                  10   \n",
            "\n",
            "   Preço Unitário   \n",
            "0           1500.0  \n",
            "1           1000.0  \n",
            "2            600.0  \n",
            "3            200.0  \n",
            "4             80.0  \n",
            "\n",
            "Dados Transformados da Filial 2 (do banco de dados SQL):\n",
            "   ID do Produto                    Nome do Produto  Quantidade Vendida  \\\n",
            "0              1  Smartphone Samsung Galaxy Note 20                  22   \n",
            "1              2                 Laptop Dell XPS 13                  21   \n",
            "2              3               Monitor LG UltraWide                  22   \n",
            "3              4           Teclado Mecânico Corsair                  23   \n",
            "4              5       Mouse Gamer Razer DeathAdder                  24   \n",
            "\n",
            "   Preço Unitário  \n",
            "0           950.0  \n",
            "1            55.5  \n",
            "2            61.0  \n",
            "3            66.5  \n",
            "4            72.0  \n",
            "Erro: A coluna 'Valor Total' não existe em um dos DataFrames.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pip install dash pandas plotly"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kT2uweqMO3vI",
        "outputId": "07136a13-3cfa-4a32-e85c-ae16794f6a09"
      },
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting dash\n",
            "  Downloading dash-2.18.1-py3-none-any.whl.metadata (10 kB)\n",
            "Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (2.1.4)\n",
            "Requirement already satisfied: plotly in /usr/local/lib/python3.10/dist-packages (5.24.1)\n",
            "Requirement already satisfied: Flask<3.1,>=1.0.4 in /usr/local/lib/python3.10/dist-packages (from dash) (2.2.5)\n",
            "Requirement already satisfied: Werkzeug<3.1 in /usr/local/lib/python3.10/dist-packages (from dash) (3.0.4)\n",
            "Collecting dash-html-components==2.0.0 (from dash)\n",
            "  Downloading dash_html_components-2.0.0-py3-none-any.whl.metadata (3.8 kB)\n",
            "Collecting dash-core-components==2.0.0 (from dash)\n",
            "  Downloading dash_core_components-2.0.0-py3-none-any.whl.metadata (2.9 kB)\n",
            "Collecting dash-table==5.0.0 (from dash)\n",
            "  Downloading dash_table-5.0.0-py3-none-any.whl.metadata (2.4 kB)\n",
            "Requirement already satisfied: importlib-metadata in /usr/local/lib/python3.10/dist-packages (from dash) (8.5.0)\n",
            "Requirement already satisfied: typing-extensions>=4.1.1 in /usr/local/lib/python3.10/dist-packages (from dash) (4.12.2)\n",
            "Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from dash) (2.32.3)\n",
            "Collecting retrying (from dash)\n",
            "  Downloading retrying-1.3.4-py3-none-any.whl.metadata (6.9 kB)\n",
            "Requirement already satisfied: nest-asyncio in /usr/local/lib/python3.10/dist-packages (from dash) (1.6.0)\n",
            "Requirement already satisfied: setuptools in /usr/local/lib/python3.10/dist-packages (from dash) (71.0.4)\n",
            "Requirement already satisfied: numpy<2,>=1.22.4 in /usr/local/lib/python3.10/dist-packages (from pandas) (1.26.4)\n",
            "Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas) (2.8.2)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2024.2)\n",
            "Requirement already satisfied: tzdata>=2022.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2024.1)\n",
            "Requirement already satisfied: tenacity>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from plotly) (9.0.0)\n",
            "Requirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from plotly) (24.1)\n",
            "Requirement already satisfied: Jinja2>=3.0 in /usr/local/lib/python3.10/dist-packages (from Flask<3.1,>=1.0.4->dash) (3.1.4)\n",
            "Requirement already satisfied: itsdangerous>=2.0 in /usr/local/lib/python3.10/dist-packages (from Flask<3.1,>=1.0.4->dash) (2.2.0)\n",
            "Requirement already satisfied: click>=8.0 in /usr/local/lib/python3.10/dist-packages (from Flask<3.1,>=1.0.4->dash) (8.1.7)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.2->pandas) (1.16.0)\n",
            "Requirement already satisfied: MarkupSafe>=2.1.1 in /usr/local/lib/python3.10/dist-packages (from Werkzeug<3.1->dash) (2.1.5)\n",
            "Requirement already satisfied: zipp>=3.20 in /usr/local/lib/python3.10/dist-packages (from importlib-metadata->dash) (3.20.2)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests->dash) (3.3.2)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests->dash) (3.10)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests->dash) (2.2.3)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests->dash) (2024.8.30)\n",
            "Downloading dash-2.18.1-py3-none-any.whl (7.5 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m7.5/7.5 MB\u001b[0m \u001b[31m52.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading dash_core_components-2.0.0-py3-none-any.whl (3.8 kB)\n",
            "Downloading dash_html_components-2.0.0-py3-none-any.whl (4.1 kB)\n",
            "Downloading dash_table-5.0.0-py3-none-any.whl (3.9 kB)\n",
            "Downloading retrying-1.3.4-py3-none-any.whl (11 kB)\n",
            "Installing collected packages: dash-table, dash-html-components, dash-core-components, retrying, dash\n",
            "Successfully installed dash-2.18.1 dash-core-components-2.0.0 dash-html-components-2.0.0 dash-table-5.0.0 retrying-1.3.4\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import dash\n",
        "from dash import dcc, html, Input, Output\n",
        "import plotly.express as px\n",
        "import pandas as pd\n",
        "\n",
        "\n",
        "vendas_filial1 = pd.read_csv('vendas_filial1.csv')\n",
        "vendas_filial2 = pd.read_excel('vendas_filial2.xlsx')\n",
        "\n",
        "print(\"Colunas de vendas_filial1:\", vendas_filial1.columns)\n",
        "print(\"Colunas de vendas_filial2:\", vendas_filial2.columns)\n",
        "\n",
        "vendas_filial1.columns = vendas_filial1.columns.str.strip()\n",
        "vendas_filial2.columns = vendas_filial2.columns.str.strip()\n",
        "\n",
        "vendas_filial1['Valor Total'] = vendas_filial1['Quantidade Vendida'] * vendas_filial1['Preço Unitário']\n",
        "vendas_filial2['Valor Total'] = vendas_filial2['Quantidade Vendida'] * vendas_filial2['Preço Unitário']\n",
        "\n",
        "total_vendas_filial1 = vendas_filial1['Valor Total'].sum()\n",
        "total_vendas_filial2 = vendas_filial2['Valor Total'].sum()\n",
        "\n",
        "# Criar o app Dash\n",
        "app = dash.Dash(__name__)\n",
        "\n",
        "app.layout = html.Div([\n",
        "    html.H1(\"Dashboard de Vendas das Filiais\", style={'text-align': 'center'}),\n",
        "    dcc.Graph(id='grafico-vendas'),\n",
        "    html.Div([\n",
        "        html.H4(\"Selecione a Filial para ver os detalhes dos produtos:\"),\n",
        "        dcc.Dropdown(id='dropdown-filial',\n",
        "                     options=[\n",
        "                         {'label': 'Filial 1', 'value': 'filial1'},\n",
        "                         {'label': 'Filial 2', 'value': 'filial2'}\n",
        "                     ],\n",
        "                     value='filial1'),\n",
        "        dcc.Graph(id='tabela-produtos')\n",
        "    ], style={'width': '50%', 'display': 'inline-block'}),\n",
        "    dcc.Graph(id='grafico-pizza')\n",
        "])\n",
        "\n",
        "@app.callback(\n",
        "    Output('grafico-vendas', 'figure'),\n",
        "    Input('dropdown-filial', 'value')\n",
        ")\n",
        "def update_grafico_vendas(filial):\n",
        "    df_total_vendas = pd.DataFrame({\n",
        "        'Filial': ['Filial 1', 'Filial 2'],\n",
        "        'Total de Vendas': [total_vendas_filial1, total_vendas_filial2]\n",
        "    })\n",
        "    fig = px.bar(df_total_vendas, x='Filial', y='Total de Vendas',\n",
        "                 title='Comparação de Vendas entre as Filiais',\n",
        "                 labels={'Total de Vendas': 'Valor Total das Vendas (R$)'})\n",
        "    return fig\n",
        "\n",
        "@app.callback(\n",
        "    Output('tabela-produtos', 'figure'),\n",
        "    [Input('dropdown-filial', 'value')]\n",
        ")\n",
        "def update_tabela_produtos(filial):\n",
        "    df = vendas_filial1 if filial == 'filial1' else vendas_filial2\n",
        "    fig = px.bar(df, x='Nome do Produto', y='Valor Total',\n",
        "                 title=f'Vendas de Produtos na {filial.capitalize()}',\n",
        "                 labels={'Valor Total': 'Valor Total (R$)'})\n",
        "    return fig\n",
        "\n",
        "@app.callback(\n",
        "    Output('grafico-pizza', 'figure'),\n",
        "    [Input('dropdown-filial', 'value')]\n",
        ")\n",
        "def update_grafico_pizza(filial):\n",
        "    df = vendas_filial1 if filial == 'filial1' else vendas_filial2\n",
        "    fig = px.pie(df, names='Nome do Produto', values='Valor Total',\n",
        "                 title=f'Distribuição de Vendas por Produto na {filial.capitalize()}')\n",
        "    return fig\n",
        "\n",
        "if __name__ == '__main__':\n",
        "    app.run_server(debug=True, host='0.0.0.0', port=8050)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 800
        },
        "id": "IRCK2O8BCU1v",
        "outputId": "64acb22b-954c-4ec4-9b4e-4a8508300cfd"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Colunas de vendas_filial1: Index(['ID do Produto', 'Nome do Produto', 'Quantidade Vendida',\n",
            "       'Preço Unitário '],\n",
            "      dtype='object')\n",
            "Colunas de vendas_filial2: Index(['ID do Produto', 'Nome do Produto', 'Quantidade Vendida',\n",
            "       'Preço Unitário'],\n",
            "      dtype='object')\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ],
            "application/javascript": [
              "(async (port, path, width, height, cache, element) => {\n",
              "    if (!google.colab.kernel.accessAllowed && !cache) {\n",
              "      return;\n",
              "    }\n",
              "    element.appendChild(document.createTextNode(''));\n",
              "    const url = await google.colab.kernel.proxyPort(port, {cache});\n",
              "    const iframe = document.createElement('iframe');\n",
              "    iframe.src = new URL(path, url).toString();\n",
              "    iframe.height = height;\n",
              "    iframe.width = width;\n",
              "    iframe.style.border = 0;\n",
              "    iframe.allow = [\n",
              "        'accelerometer',\n",
              "        'autoplay',\n",
              "        'camera',\n",
              "        'clipboard-read',\n",
              "        'clipboard-write',\n",
              "        'gyroscope',\n",
              "        'magnetometer',\n",
              "        'microphone',\n",
              "        'serial',\n",
              "        'usb',\n",
              "        'xr-spatial-tracking',\n",
              "    ].join('; ');\n",
              "    element.appendChild(iframe);\n",
              "  })(8050, \"/\", \"100%\", 650, false, window.element)"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "No processo de extração de dados para lidar com arquivos como CSV e Excel, há várias vantagens, Primeiro, a automação, você não precisa fazer cálculos ou manipulações manualmente, o que economiza tempo, outro ponto é a rapidez, já que a linguagem que é Python processa grandes volumes de dados de forma muito mais eficiente do que se você fizesse isso manualmente em planilhas, e, por último, a facilidade em integrar dados, permitindo combinar, comparar e analisar diferentes fontes, como no caso dos dados de duas filiais que você está sendo extraido os dados como exemplo.\n",
        "  \n",
        "O SQLite é um banco de dados leve e autônomo que armazena informações em um único arquivo. Ele não precisa de um servidor para funcionar, sendo ideal para projetos simples, aplicativos locais ou onde não é necessário um sistema de banco de dados mais complexo.\n",
        "\n",
        "\n",
        "Resumo:\n",
        "Redução de tempo para analise dos arquivos.\n",
        "Processamento eficiente.\n",
        "Analise rapida de dados.\n",
        "SQLite, bom para projetos simples.\n"
      ],
      "metadata": {
        "id": "L321C4gTReU6"
      }
    }
  ]
}